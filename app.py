# app.py

import streamlit as st
import requests
import os

# Configurar la p치gina
st.set_page_config(
    page_title="Buscador de Teletrabajo",
    page_icon="游눺",
    layout="centered",
    initial_sidebar_state="auto",
)

# T칤tulo de la aplicaci칩n
st.title("Buscador de Teletrabajo 游늯俱뫮잺游눹")

# Instrucciones para el usuario
st.write("""
    Carga tu curr칤culum y encontraremos las mejores oportunidades de teletrabajo para ti.
    Una vez que encuentremos un empleo adecuado, enviaremos tu curr칤culum al empleador correspondiente.
""")

# Funci칩n para procesar el curr칤culum
def procesar_curriculum(file):
    try:
        # Aqu칤 podr칤as agregar l칩gica para procesar el curr칤culum,
        # como extraer texto o analizar habilidades. Por simplicidad,
        # asumiremos que simplemente enviamos el archivo a la API de Together.
        return file.read()
    except Exception as e:
        st.error(f"Error al procesar el curr칤culum: {e}")
        return None

# Funci칩n para buscar empleos usando la API de Serper
def buscar_empleos(descripcion, api_key):
    try:
        url = "https://serper-api-endpoint.com/search"  # Reemplaza con el endpoint real de Serper
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        payload = {
            "query": f"teletrabajo {descripcion}",
            "location": "remote"
        }
        response = requests.post(url, json=payload, headers=headers)
        if response.status_code == 200:
            return response.json()
        else:
            st.error(f"Error en la b칰squeda de empleos: {response.text}")
            return None
    except Exception as e:
        st.error(f"Excepci칩n al buscar empleos: {e}")
        return None

# Funci칩n para enviar el curr칤culum al empleador usando la API de Together
def enviar_curriculum(empleador, curriculum_data, api_key):
    try:
        url = f"https://together-api-endpoint.com/send"  # Reemplaza con el endpoint real de Together
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        payload = {
            "employer_id": empleador["id"],
            "resume": curriculum_data,
            "user_email": "usuario@ejemplo.com"  # Puedes solicitar el email al usuario
        }
        response = requests.post(url, json=payload, headers=headers)
        if response.status_code == 200:
            return True
        else:
            st.error(f"Error al enviar el curr칤culum: {response.text}")
            return False
    except Exception as e:
        st.error(f"Excepci칩n al enviar el curr칤culum: {e}")
        return False

# Componente para cargar el curr칤culum
uploaded_file = st.file_uploader("Carga tu curr칤culum (PDF o DOCX)", type=["pdf", "docx"])

# Campo para el email del usuario
user_email = st.text_input("Introduce tu correo electr칩nico para notificaciones", type="email")

if uploaded_file and user_email:
    if st.button("Buscar y Enviar"):
        with st.spinner("Procesando tu curr칤culum y buscando empleos..."):
            # Procesar el curr칤culum
            curriculum = procesar_curriculum(uploaded_file)
            if curriculum:
                # Aqu칤 podr칤as extraer una descripci칩n o habilidades clave del curr칤culum
                descripcion = "habilidades clave extra칤das"  # Implementa la l칩gica necesaria

                # Buscar empleos adecuados
                serper_api_key = st.secrets["serper_api_key"]
                empleos = buscar_empleos(descripcion, serper_api_key)

                if empleos:
                    # Por simplicidad, tomaremos el primer empleo encontrado
                    empleo_seleccionado = empleos["results"][0]
                    
                    # Enviar el curr칤culum al empleador
                    together_api_key = st.secrets["together_api_key"]
                    exito = enviar_curriculum(empleo_seleccionado, curriculum, together_api_key)

                    if exito:
                        st.success(f"춰Tu curr칤culum ha sido enviado a {empleo_seleccionado['employer_name']}!")
                    else:
                        st.error("Hubo un problema al enviar tu curr칤culum.")
                else:
                    st.warning("No se encontraron empleos adecuados.")
